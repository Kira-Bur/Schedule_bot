import os
import requests
import zipfile
import shutil
import telebot
import time
import threading
from datetime import datetime
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import io
from database import DatabaseManager
from image_processor import ImageProcessor
from admin_db import AdminManager

import logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
BOT_TOKEN = '8274210121:AAGyTRNIInUGqYqP6dtvayTxxjXZm2Btn-Y'
DOWNLOAD_URL = 'http://docs.vztec.ru/index.php/s/W5yaNali0j7SSDD/download'
ZIP_FILENAME = 'schedule.zip'
EXTRACT_FOLDER = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
TARGET_FOLDERS = ['–∫–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)', '–∫–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)']
UPDATE_INTERVAL = 60
MAIN_ADMIN_ID = 1347692271

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
db_manager = DatabaseManager()
image_processor = ImageProcessor()
admin_manager = AdminManager()
bot = telebot.TeleBot(BOT_TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
admin_states = {}

def find_schedule_folder(base_path, building=1):
    """–ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞"""
    if not os.path.exists(base_path):
        return None
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É –ø–æ –∫–æ—Ä–ø—É—Å—É
    target_folder = None
    if building == 1:
        target_folder = '–∫–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)'
    elif building == 2:
        target_folder = '–∫–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)'
    
    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–∞–ø–∫—É
    if target_folder:
        potential_path = os.path.join(base_path, target_folder)
        if os.path.exists(potential_path) and os.path.isdir(potential_path):
            return potential_path
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é, –∏—â–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    for root, dirs, files in os.walk(base_path):
        for dir_name in dirs:
            lower_dir = dir_name.lower()
            if building == 1 and any(keyword in lower_dir for keyword in ['–∫–æ—Ä–ø—É—Å 1', '—Ñ–º–ø–∫', '–∫–æ—Ä–ø—É—Å‚Ññ1']):
                return os.path.join(root, dir_name)
            elif building == 2 and any(keyword in lower_dir for keyword in ['–∫–æ—Ä–ø—É—Å 2', '–ø—Ç—Ñ', '–∫–æ—Ä–ø—É—Å‚Ññ2']):
                return os.path.join(root, dir_name)
    
    return None

def download_file(url, filename):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ URL"""
    try:
        response = requests.get(url, stream=True, timeout=30)
        response.raise_for_status()
        
        with open(filename, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return False

def extract_zip(zip_path, extract_to):
    """–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ ZIP –∞—Ä—Ö–∏–≤–∞"""
    try:
        if os.path.exists(extract_to):
            shutil.rmtree(extract_to)
        
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall('.')
        
        return os.path.exists(extract_to)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ: {e}")
        return False

def get_schedule_files(building=1):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞"""
    if not os.path.exists(EXTRACT_FOLDER):
        return []
    
    schedule_folder = find_schedule_folder(EXTRACT_FOLDER, building)
    
    if not schedule_folder:
        return []
    
    schedule_files = []
    
    for file in os.listdir(schedule_folder):
        file_path = os.path.join(schedule_folder, file)
        if os.path.isfile(file_path) and (file.lower().endswith('.docx') or file.lower().endswith('.xml')):
            schedule_files.append(file)
    
    return sorted(schedule_files)

def create_building_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ—Ä–ø—É—Å–∞"""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("üè¢ –ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)", callback_data='building_1'),
        InlineKeyboardButton("üè´ –ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)", callback_data='building_2')
    )
    return keyboard

def create_files_keyboard(building=1):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞"""
    files = get_schedule_files(building)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    
    if files:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ñ–∞–π–ª–æ–≤
        buttons = [KeyboardButton(file) for file in files]
        keyboard.add(*buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫"
    keyboard.add(KeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–º–µ–Ω–∏—Ç—å –∫–æ—Ä–ø—É—Å"
    keyboard.add(KeyboardButton("üè¢ –°–º–µ–Ω–∏—Ç—å –∫–æ—Ä–ø—É—Å"))
    
    return keyboard

def create_admin_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        KeyboardButton("üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º"),
        KeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
        KeyboardButton("‚ùå –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    )
    return keyboard

def send_file_to_user(chat_id, file_path, filename):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞"""
    try:
        img = image_processor.convert_to_image(file_path)
        
        if img:
            # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            img_buffer = io.BytesIO()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (–¥–ª—è JPEG)
            if img.mode in ('RGBA', 'LA'):
                background = Image.new('RGB', img.size, (255, 255, 255))
                background.paste(img, mask=img.split()[-1])
                img = background
            elif img.mode != 'RGB':
                img = img.convert('RGB')
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π (–∫–∞—á–µ—Å—Ç–≤–æ 85%, –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
            img.save(img_buffer, format='JPEG', optimize=True, quality=85, progressive=True)
            img_buffer.seek(0)
            
            png_filename = os.path.splitext(filename)[0] + '.jpg'
            bot.send_document(chat_id, img_buffer, visible_file_name=png_filename)
            img_buffer.close()
        else:
            with open(file_path, 'rb') as f:
                bot.send_document(chat_id, f)
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")

def update_schedule():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    logger.info("–ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
    
    if download_file(DOWNLOAD_URL, ZIP_FILENAME):
        if extract_zip(ZIP_FILENAME, EXTRACT_FOLDER):
            logger.info("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
            try:
                os.remove(ZIP_FILENAME)
            except:
                pass
            return True
    return False

def check_new_files(chat_id=None, building=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {building if building else '–≤—Å–µ—Ö'}...")
    
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ—Ä–ø—É—Å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
    if building is not None:
        buildings_to_check = [building]
    else:
        buildings_to_check = [1, 2]  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –∫–æ—Ä–ø—É—Å–∞
    
    all_new_files = []
    
    for current_building in buildings_to_check:
        schedule_folder = find_schedule_folder(EXTRACT_FOLDER, current_building)
        if not schedule_folder:
            logger.warning(f"–ü–∞–ø–∫–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            if chat_id and (building == current_building or building is None):
                bot.send_message(chat_id, f"‚ùå –ü–∞–ø–∫–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            continue
        
        current_files = get_schedule_files(current_building)
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤, –Ω–µ –æ—á–∏—â–∞–µ–º –±–∞–∑—É - –≤–æ–∑–º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
        if not current_files:
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building}.")
            if chat_id and (building == current_building or building is None):
                bot.send_message(chat_id, f"‚ùå –§–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            continue
        
        known_files = db_manager.get_known_files(current_building)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã
        if chat_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            user_building = db_manager.get_user_building(chat_id)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —ç—Ç–æ—Ç –∫–æ—Ä–ø—É—Å
            if user_building == current_building:
                users = {chat_id: False}  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –≥—Ä—É–ø–ø–∞
                send_to_all = False
            else:
                users = {}
                send_to_all = False
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —ç—Ç–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
            users = db_manager.get_users_by_building(current_building)
            send_to_all = True
        
        if not users:
            logger.info(f"–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building} –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
            continue
        
        new_files = []
        updated_files = []
        
        for filename in current_files:
            file_path = os.path.join(schedule_folder, filename)
            if os.path.exists(file_path):
                current_hash = db_manager.get_file_hash(file_path)
                
                if filename not in known_files:
                    # –ù–æ–≤—ã–π —Ñ–∞–π–ª
                    new_files.append((filename, file_path, current_hash))
                    logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building}: {filename}")
                elif known_files[filename] != current_hash:
                    # –§–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è
                    updated_files.append((filename, file_path, current_hash))
                    logger.info(f"–§–∞–π–ª –∏–∑–º–µ–Ω–µ–Ω –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building}: {filename}")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        files_to_send = new_files + updated_files
        all_new_files.extend([(f[0], f[1], f[2], current_building) for f in files_to_send])
        
        if files_to_send:
            logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(files_to_send)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö
            building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
            
            if new_files:
                new_files_names = [f[0] for f in new_files]
                new_files_text = "\n".join([f"‚Ä¢ {name}" for name in new_files_names])
                message_text = f"üì• –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ({building_name}):\n{new_files_text}"
            else:
                message_text = f"üìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è ({building_name}):"
            
            if updated_files:
                updated_files_names = [f[0] for f in updated_files]
                updated_files_text = "\n".join([f"‚Ä¢ {name}" for name in updated_files_names])
                message_text += f"\n\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n{updated_files_text}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Ñ–∞–π–ª—ã
            for user_id, is_group in users.items():
                try:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö/–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
                    if send_to_all or user_id == chat_id:
                        bot.send_message(user_id, message_text)
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–∏ —Ñ–∞–π–ª—ã
                    for filename, file_path, file_hash in files_to_send:
                        send_file_to_user(user_id, file_path, filename)
                        time.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
                    
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            for filename, file_path, file_hash in files_to_send:
                if file_hash:
                    db_manager.save_file_info(filename, file_hash, current_building)
            
            # –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π
            db_manager.cleanup_old_files(current_files, current_building)
            
        else:
            logger.info(f"–ù–æ–≤—ã—Ö –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building}")
            if chat_id and (building == current_building or building is None):
                bot.send_message(chat_id, f"‚úÖ –î–ª—è –∫–æ—Ä–ø—É—Å–∞ {current_building} –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ!")
    
    return all_new_files

def periodic_update():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤"""
    while True:
        try:
            if update_schedule():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–æ –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∏—Ç —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å–≤–æ–µ–≥–æ –∫–æ—Ä–ø—É—Å–∞
                check_new_files()
            time.sleep(UPDATE_INTERVAL)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ periodic_update: {e}")
            time.sleep(UPDATE_INTERVAL)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
        is_group = message.chat.type in ['group', 'supergroup']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ
        current_building = db_manager.get_user_building(message.chat.id)
        
        if current_building is None:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –∫–æ—Ä–ø—É—Å
            db_manager.add_user(message.chat.id, is_group, 1)  # –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å –∫–æ—Ä–ø—É—Å–æ–º 1
            keyboard = create_building_keyboard()
            welcome_text = (
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!\n\n"
                "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∫–æ—Ä–ø—É—Å:"
            )
            bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é
            db_manager.add_user(message.chat.id, is_group, current_building)
            
            schedule_folder = find_schedule_folder(EXTRACT_FOLDER, current_building)
            if schedule_folder:
                files = get_schedule_files(current_building)
                if files:
                    # –ï—Å–ª–∏ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    if is_group:
                        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
                        welcome_text = (
                            f"üëã –ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n"
                            f"üìç –í–∞—à –∫–æ—Ä–ø—É—Å: {building_name}\n"
                            f"üìç –ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É"
                        )
                        bot.send_message(message.chat.id, welcome_text)
                    else:
                        # –î–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                        keyboard = create_files_keyboard(current_building)
                        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
                        welcome_text = (
                            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                            f"üìç –í–∞—à –∫–æ—Ä–ø—É—Å: {building_name}\n\n"
                            f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:\n\n"
                            f"üìÅ –î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}\n"
                            f"üìç –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ\n"
                            f"üîÑ –ù–∞–∂–º–∏—Ç–µ '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤\n"
                            f"üè¢ –ù–∞–∂–º–∏—Ç–µ '–°–º–µ–Ω–∏—Ç—å –∫–æ—Ä–ø—É—Å' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ—Ä–ø—É—Å–∞"
                        )
                        bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)
                else:
                    bot.send_message(message.chat.id, "–§–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_welcome: {e}")

@bot.message_handler(commands=['schedule'])
def show_schedule_for_groups(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤ –≤ –≥—Ä—É–ø–ø–∞—Ö"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
        if message.chat.type not in ['group', 'supergroup']:
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±–æ–∏–º–∏ –∫–æ—Ä–ø—É—Å–∞–º–∏
        keyboard = InlineKeyboardMarkup(row_width=2)
        keyboard.add(
            InlineKeyboardButton("üè¢ –ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)", callback_data='schedule_building_1'),
            InlineKeyboardButton("üè´ –ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)", callback_data='schedule_building_2'),
            InlineKeyboardButton("üìã –û–±–∞ –∫–æ—Ä–ø—É—Å–∞", callback_data='schedule_both')
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ—Ä–ø—É—Å –≥—Ä—É–ø–ø—ã
        current_building = db_manager.get_user_building(message.chat.id)
        current_building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞
        files_1 = get_schedule_files(1)
        files_2 = get_schedule_files(2)
        
        bot.send_message(
            message.chat.id,
            f"üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –î–õ–Ø –ì–†–£–ü–ü\n\n"
            f"üìç –¢–µ–∫—É—â–∏–π –∫–æ—Ä–ø—É—Å –≥—Ä—É–ø–ø—ã: {current_building_name}\n"
            f"üìÅ –î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∞–π–ª–æ–≤:\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 1: {len(files_1)} —Ñ–∞–π–ª–æ–≤\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 2: {len(files_2)} —Ñ–∞–π–ª–æ–≤\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ –ø–æ–∫–∞–∑–∞—Ç—å:",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_schedule_for_groups: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!")

@bot.callback_query_handler(func=lambda call: call.data.startswith('schedule_'))
def handle_schedule_selection(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø"""
    try:
        action = call.data.split('_')[1]
        
        if action == 'building':
            building = int(call.data.split('_')[2])
            send_schedule_files(call.message.chat.id, building, call.message.message_id)
            
        elif action == 'both':
            send_both_buildings_schedule(call.message.chat.id, call.message.message_id)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!")

def send_schedule_files(chat_id, building, message_id=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞"""
    try:
        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        schedule_folder = find_schedule_folder(EXTRACT_FOLDER, building)
        
        if not schedule_folder:
            bot.send_message(chat_id, f"‚ùå –ü–∞–ø–∫–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è {building_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        files = get_schedule_files(building)
        
        if not files:
            bot.send_message(chat_id, f"‚ùå –§–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {building_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        if message_id:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"üìÖ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {building_name}...",
                reply_markup=None
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
        bot.send_message(chat_id, f"üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï {building_name.upper()}:")
        
        for filename in files:
            file_path = os.path.join(schedule_folder, filename)
            if os.path.exists(file_path):
                try:
                    send_file_to_user(chat_id, file_path, filename)
                    time.sleep(0.5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ {filename}: {e}")
                    bot.send_message(chat_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {filename}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É", callback_data='back_to_schedule_menu'))
        
        bot.send_message(
            chat_id,
            f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {building_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n"
            f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(files)}",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_schedule_files: {e}")
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!")

def send_both_buildings_schedule(chat_id, message_id=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤"""
    try:
        if message_id:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="üìÖ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤...",
                reply_markup=None
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ 1
        send_schedule_files(chat_id, 1, None)
        time.sleep(1)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ 2
        send_schedule_files(chat_id, 2, None)
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É", callback_data='back_to_schedule_menu'))
        
        bot.send_message(
            chat_id,
            "‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_both_buildings_schedule: {e}")
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!")

@bot.callback_query_handler(func=lambda call: call.data == 'back_to_schedule_menu')
def back_to_schedule_menu(call):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        # –ü—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /raspisanie
        show_schedule_for_groups(call.message)
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except:
            pass
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_schedule_menu: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é!")

@bot.callback_query_handler(func=lambda call: call.data.startswith('building_'))
def handle_building_selection(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ—Ä–ø—É—Å–∞"""
    try:
        building = int(call.data.split('_')[1])
        db_manager.set_user_building(call.message.chat.id, building)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"‚úÖ –í—ã–±—Ä–∞–Ω {building_name}"
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å —Ñ–∞–π–ª–∞–º–∏
        schedule_folder = find_schedule_folder(EXTRACT_FOLDER, building)
        if schedule_folder:
            files = get_schedule_files(building)
            if files:
                keyboard = create_files_keyboard(building)
                welcome_text = (
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                    f"üìç –í–∞—à –∫–æ—Ä–ø—É—Å: {building_name}\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:\n\n"
                    f"üìÅ –î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}\n"
                    f"üìç –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ\n"
                    f"üîÑ –ù–∞–∂–º–∏—Ç–µ '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤\n"
                    f"üè¢ –ù–∞–∂–º–∏—Ç–µ '–°–º–µ–Ω–∏—Ç—å –∫–æ—Ä–ø—É—Å' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ—Ä–ø—É—Å–∞"
                )
                bot.send_message(call.message.chat.id, welcome_text, reply_markup=keyboard)
            else:
                bot.send_message(call.message.chat.id, f"–§–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {building_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            bot.send_message(call.message.chat.id, f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {building_name} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ—Ä–ø—É—Å–∞: {e}")

@bot.message_handler(func=lambda message: message.text in get_schedule_files(1) + get_schedule_files(2))
def send_selected_file(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ª–∏—á–Ω—ã–π —á–∞—Ç (–≤ –≥—Ä—É–ø–ø–∞—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
        if message.chat.type in ['group', 'supergroup']:
            return
            
        filename = message.text
        building = db_manager.get_user_building(message.chat.id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –≤ –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–∞—Ö
        schedule_folder_1 = find_schedule_folder(EXTRACT_FOLDER, 1)
        schedule_folder_2 = find_schedule_folder(EXTRACT_FOLDER, 2)
        
        file_path = None
        file_building = None
        
        if schedule_folder_1:
            potential_path = os.path.join(schedule_folder_1, filename)
            if os.path.exists(potential_path):
                file_path = potential_path
                file_building = 1
        
        if not file_path and schedule_folder_2:
            potential_path = os.path.join(schedule_folder_2, filename)
            if os.path.exists(potential_path):
                file_path = potential_path
                file_building = 2
        
        if file_path:
            bot.send_message(message.chat.id, f"üìÑ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª: {filename}")
            send_file_to_user(message.chat.id, file_path, filename)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            file_hash = db_manager.get_file_hash(file_path)
            if file_hash and file_building:
                db_manager.save_file_info(filename, file_hash, file_building)
        else:
            bot.send_message(message.chat.id, f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")

@bot.message_handler(func=lambda message: message.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫")
def refresh_files_list(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ - —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ª–∏—á–Ω—ã–π —á–∞—Ç (–≤ –≥—Ä—É–ø–ø–∞—Ö —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        if message.chat.type in ['group', 'supergroup']:
            return

        building = db_manager.get_user_building(message.chat.id)
        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"

        # –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        bot.send_message(message.chat.id, f"üîÑ –û–±–Ω–æ–≤–ª—è—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {building_name}...")

        if update_schedule():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¢–û–õ–¨–ö–û –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            new_files = check_new_files(message.chat.id, building)

            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
            keyboard = create_files_keyboard(building)
            files = get_schedule_files(building)

            if files:
                if new_files:
                    # –ï—Å–ª–∏ –±—ã–ª–∏ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã, —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ check_new_files
                    bot.send_message(message.chat.id,
                                   f"‚úÖ –°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è {building_name}!\nüìÅ –î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}",
                                   reply_markup=keyboard)
                else:
                    bot.send_message(message.chat.id,
                                   f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è {building_name}!\nüìÅ –î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}\nüîÑ –ù–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ",
                                   reply_markup=keyboard)
            else:
                bot.send_message(message.chat.id,
                               f"‚ùå –§–∞–π–ª—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è {building_name}",
                               reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤")

@bot.message_handler(func=lambda message: message.text == "üè¢ –°–º–µ–Ω–∏—Ç—å –∫–æ—Ä–ø—É—Å")
def change_building(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –∫–æ—Ä–ø—É—Å–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ª–∏—á–Ω—ã–π —á–∞—Ç
        if message.chat.type in ['group', 'supergroup']:
            return
            
        keyboard = create_building_keyboard()
        current_building = db_manager.get_user_building(message.chat.id)
        current_building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        
        bot.send_message(
            message.chat.id,
            f"üìç –í–∞—à —Ç–µ–∫—É—â–∏–π –∫–æ—Ä–ø—É—Å: {current_building_name}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ—Ä–ø—É—Å:",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ—Ä–ø—É—Å–∞: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ—Ä–ø—É—Å–∞")

@bot.message_handler(commands=['status'])
def send_status(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã status"""
    try:
        users = db_manager.get_all_users()
        users_count = len(users)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ—Ä–ø—É—Å–∞–º
        building_1_users = sum(1 for user_data in users.values() if user_data['building'] == 1)
        building_2_users = sum(1 for user_data in users.values() if user_data['building'] == 2)
        
        group_users_count = sum(1 for user_data in users.values() if user_data['is_group'])
        personal_users_count = users_count - group_users_count
        
        # –§–∞–π–ª—ã –ø–æ –∫–æ—Ä–ø—É—Å–∞–º
        files_1 = get_schedule_files(1)
        files_2 = get_schedule_files(2)
        
        known_files_1 = db_manager.get_known_files(1)
        known_files_2 = db_manager.get_known_files(2)
        
        status_text = (
            f"üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}\n"
            f"  - –ì—Ä—É–ø–ø—ã: {group_users_count}\n"
            f"  - –õ–∏—á–Ω—ã–µ —á–∞—Ç—ã: {personal_users_count}\n"
            f"‚Ä¢ –ü–æ –∫–æ—Ä–ø—É—Å–∞–º:\n"
            f"  - –ö–æ—Ä–ø—É—Å 1: {building_1_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            f"  - –ö–æ—Ä–ø—É—Å 2: {building_2_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            f"‚Ä¢ –§–∞–π–ª–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n"
            f"  - –ö–æ—Ä–ø—É—Å 1: {len(files_1)} —Ñ–∞–π–ª–æ–≤\n"
            f"  - –ö–æ—Ä–ø—É—Å 2: {len(files_2)} —Ñ–∞–π–ª–æ–≤\n"
            f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤:\n"
            f"  - –ö–æ—Ä–ø—É—Å 1: {len(known_files_1)}\n"
            f"  - –ö–æ—Ä–ø—É—Å 2: {len(known_files_2)}\n"
        )
        
        bot.send_message(message.chat.id, status_text)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_status: {e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")

@bot.message_handler(commands=['college'])
def set_building_command(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–º–µ–Ω—ã –∫–æ—Ä–ø—É—Å–∞ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
        if message.chat.type not in ['group', 'supergroup']:
            bot.send_message(message.chat.id, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("üè¢ –ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)", callback_data='group_building_1'),
            InlineKeyboardButton("üè´ –ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)", callback_data='group_building_2')
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ—Ä–ø—É—Å –≥—Ä—É–ø–ø—ã
        current_building = db_manager.get_user_building(message.chat.id)
        current_building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if current_building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        
        bot.send_message(
            message.chat.id,
            f"üìç –¢–µ–∫—É—â–∏–π –∫–æ—Ä–ø—É—Å: {current_building_name}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ—Ä–ø—É—Å –¥–ª—è –≥—Ä—É–ø–ø—ã:",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ set_building_command: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!")

@bot.callback_query_handler(func=lambda call: call.data.startswith('group_building_'))
def handle_group_building_selection(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ—Ä–ø—É—Å–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã"""
    try:
        building = int(call.data.split('_')[2])
        building_name = "–ö–æ—Ä–ø—É—Å ‚Ññ1 (–§–ú–ü–ö)" if building == 1 else "–ö–æ—Ä–ø—É—Å ‚Ññ2 (–ü–¢–§)"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–ø—É—Å –¥–ª—è –≥—Ä—É–ø–ø—ã
        if db_manager.set_user_building(call.message.chat.id, building):
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=f"‚úÖ –ö–æ—Ä–ø—É—Å –≥—Ä—É–ø–ø—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:\n{building_name}\n\n"
                     f"–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞."
            )
        else:
            bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ—Ä–ø—É—Å–∞!")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ—Ä–ø—É—Å–∞ –≥—Ä—É–ø–ø—ã: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ—Ä–ø—É—Å–∞!")

@bot.message_handler(commands=['admin'])
def request_admin(message):
    """–ó–∞–ø—Ä–æ—Å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        user_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–æ–º
        if admin_manager.is_admin(user_id):
            bot.send_message(message.chat.id, "‚úÖ –í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –ª–∏ —É–∂–µ –∑–∞–ø—Ä–æ—Å
        if admin_manager.is_pending_admin(user_id):
            bot.send_message(message.chat.id, "‚è≥ –í–∞—à –∑–∞–ø—Ä–æ—Å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è!")
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        if admin_manager.add_admin_request(user_id, username, first_name, last_name):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É
            user_info = f"ID: {user_id}\nUsername: @{username}\n–ò–º—è: {first_name} {last_name}"
            
            keyboard = InlineKeyboardMarkup()
            keyboard.add(
                InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f'approve_admin_{user_id}'),
                InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f'reject_admin_{user_id}')
            )
            
            bot.send_message(
                MAIN_ADMIN_ID,
                f"üÜï –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω—Å—Ç–≤–æ:\n\n{user_info}",
                reply_markup=keyboard
            )
            
            bot.send_message(
                message.chat.id,
                "‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!"
            )
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞!")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ request_admin: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞!")

@bot.message_handler(commands=['admin_panel'])
def admin_panel(message):
    """–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        user_id = message.from_user.id
        
        if not admin_manager.is_admin(user_id):
            bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        
        # –í—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
        admin_states[user_id] = 'admin_mode'
        keyboard = create_admin_keyboard()
        
        bot.send_message(
            message.chat.id,
            "üë®‚Äçüíª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard
        )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ admin_panel: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∞!")

@bot.message_handler(func=lambda message: admin_states.get(message.from_user.id) == 'admin_mode')
def handle_admin_actions(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∞"""
    try:
        user_id = message.from_user.id
        
        if message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            send_detailed_stats(message)
            
        elif message.text == "üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º":
            request_broadcast_message(message)
            
        elif message.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            force_update_schedule(message)
            
        elif message.text == "‚ùå –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏":
            exit_admin_panel(message)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_admin_actions: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è!")

def send_detailed_stats(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    try:
        users = db_manager.get_all_users()
        admins = admin_manager.get_all_admins()
        pending_requests = admin_manager.get_pending_requests()
        pending_actions = admin_manager.get_pending_actions()
        
        stats_text = (
            f"üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n\n"
            f"üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ: {len(users)}\n"
            f"‚Ä¢ –ì—Ä—É–ø–ø—ã: {sum(1 for u in users.values() if u['is_group'])}\n"
            f"‚Ä¢ –õ–∏—á–Ω—ã–µ —á–∞—Ç—ã: {sum(1 for u in users.values() if not u['is_group'])}\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 1: {sum(1 for u in users.values() if u['building'] == 1)}\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 2: {sum(1 for u in users.values() if u['building'] == 2)}\n\n"
            f"üë®‚Äçüíª –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–´:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ: {len(admins)}\n"
            f"‚Ä¢ –û–∂–∏–¥–∞—é—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è: {len(pending_requests)}\n"
            f"‚Ä¢ –û–∂–∏–¥–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏–π: {len(pending_actions)}\n\n"
            f"üìÅ –§–ê–ô–õ–´:\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 1: {len(get_schedule_files(1))} —Ñ–∞–π–ª–æ–≤\n"
            f"‚Ä¢ –ö–æ—Ä–ø—É—Å 2: {len(get_schedule_files(2))} —Ñ–∞–π–ª–æ–≤\n"
            f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö: {len(db_manager.get_known_files(1)) + len(db_manager.get_known_files(2))}"
        )
        
        bot.send_message(message.chat.id, stats_text)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_detailed_stats: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!")

def request_broadcast_message(message):
    """–ó–∞–ø—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    try:
        admin_states[message.from_user.id] = 'awaiting_broadcast'
        bot.send_message(
            message.chat.id,
            "üìù –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:",
            reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞"))
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ request_broadcast_message: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")

@bot.message_handler(func=lambda message: admin_states.get(message.from_user.id) == 'awaiting_broadcast')
def handle_broadcast_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    try:
        if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
            exit_admin_panel(message)
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        action_id = admin_manager.add_admin_action(
            message.from_user.id,
            'broadcast',
            message.text
        )
        
        if action_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É
            admin_info = f"–ê–¥–º–∏–Ω: @{message.from_user.username or message.from_user.first_name}"
            
            keyboard = InlineKeyboardMarkup()
            keyboard.add(
                InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data=f'approve_broadcast_{action_id}'),
                InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f'reject_broadcast_{action_id}')
            )
            
            bot.send_message(
                MAIN_ADMIN_ID,
                f"üì¢ –ó–ê–ü–†–û–° –ù–ê –†–ê–°–°–´–õ–ö–£:\n\n"
                f"{admin_info}\n\n"
                f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{message.text}",
                reply_markup=keyboard
            )
            
            bot.send_message(
                message.chat.id,
                "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"
            )
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
            admin_states[message.from_user.id] = 'admin_mode'
            
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_broadcast_message: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")

def force_update_schedule(message):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        bot.send_message(message.chat.id, "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
        
        if update_schedule():
            new_files = check_new_files()
            
            if new_files:
                bot.send_message(message.chat.id, f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ù–∞–π–¥–µ–Ω–æ {len(new_files)} –Ω–æ–≤—ã—Ö/–∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.")
            else:
                bot.send_message(message.chat.id, "‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ù–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ force_update_schedule: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!")

def exit_admin_panel(message):
    """–í—ã—Ö–æ–¥ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∞"""
    try:
        user_id = message.from_user.id
        if user_id in admin_states:
            del admin_states[user_id]
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        building = db_manager.get_user_building(user_id)
        if building:
            keyboard = create_files_keyboard(building)
            bot.send_message(
                message.chat.id,
                "‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
                reply_markup=keyboard
            )
        else:
            bot.send_message(
                message.chat.id,
                "‚úÖ –í—ã –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
                reply_markup=ReplyKeyboardRemove()
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ exit_admin_panel: {e}")

@bot.callback_query_handler(func=lambda call: call.data.startswith(('approve_admin_', 'reject_admin_')))
def handle_admin_approval(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤"""
    try:
        action = call.data.split('_')[0]
        user_id = int(call.data.split('_')[2])
        
        if action == 'approve':
            first_name = admin_manager.approve_admin(user_id, call.from_user.id)
            if first_name:
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–¥–æ–±—Ä–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
                try:
                    bot.send_message(
                        user_id,
                        f"‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–¥–æ–±—Ä–µ–Ω!\n\n"
                        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin_panel –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
                    )
                except:
                    pass
                
                bot.answer_callback_query(call.id, f"‚úÖ {first_name} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text=f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–¥–æ–±—Ä–µ–Ω: {first_name}"
                )
            else:
                bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è!")
                
        else:  # reject
            if admin_manager.reject_admin(user_id):
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    bot.send_message(
                        user_id,
                        "‚ùå –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω."
                    )
                except:
                    pass
                
                bot.answer_callback_query(call.id, "‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω!")
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚ùå –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω—Å—Ç–≤–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω"
                )
            else:
                bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è!")
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_admin_approval: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞!")

@bot.callback_query_handler(func=lambda call: call.data.startswith(('approve_broadcast_', 'reject_broadcast_')))
def handle_broadcast_approval(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    try:
        action = call.data.split('_')[0]
        action_id = int(call.data.split('_')[2])
        
        if action == 'approve':
            result = admin_manager.approve_action(action_id, call.from_user.id)
            if result:
                action_type, action_data, admin_id = result
                
                # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
                users = db_manager.get_all_users()
                success_count = 0
                fail_count = 0
                
                for user_id in users.keys():
                    try:
                        bot.send_message(user_id, f"üì¢ –û–ë–™–Ø–í–õ–ï–ù–ò–ï:\n\n{action_data}")
                        success_count += 1
                        time.sleep(0.1)
                    except:
                        fail_count += 1
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
                bot.send_message(
                    admin_id,
                    f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n"
                    f"‚Ä¢ –£—Å–ø–µ—à–Ω–æ: {success_count}\n"
                    f"‚Ä¢ –ù–µ —É–¥–∞–ª–æ—Å—å: {fail_count}"
                )
                
                bot.answer_callback_query(call.id, "‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text=f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
                )
            else:
                bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏!")
                
        else:  # reject
            if admin_manager.reject_action(action_id):
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
                admin_id = call.data.split('_')[2]
                try:
                    bot.send_message(
                        admin_id,
                        "‚ùå –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –æ—Ç–∫–ª–æ–Ω–µ–Ω –≥–ª–∞–≤–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
                    )
                except:
                    pass
                
                bot.answer_callback_query(call.id, "‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!")
                bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                )
            else:
                bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏!")
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_broadcast_approval: {e}")
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
    
    # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    if update_schedule():
        # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∫–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–ª—è –æ–±–æ–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤
        for building in [1, 2]:
            schedule_folder = find_schedule_folder(EXTRACT_FOLDER, building)
            if schedule_folder:
                files = get_schedule_files(building)
                for filename in files:
                    file_path = os.path.join(schedule_folder, filename)
                    file_hash = db_manager.get_file_hash(file_path)
                    if file_hash:
                        db_manager.save_file_info(filename, file_hash, building)
                logger.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ—Ä–ø—É—Å–∞ {building} –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
    
    # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    update_thread = threading.Thread(target=periodic_update, daemon=True)
    update_thread.start()
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    bot.infinity_polling()

if __name__ == "__main__":
    main()
